[
    {
        "issues": [
            {
                "description": {
                    "head": "Use of callcode is deprecated.",
                    "tail": "The callcode method executes code of another contract in the context of the caller account. Due to a bug in the implementation it does not persist sender and value over the call. It was therefore deprecated and may be removed in the future. Use the delegatecall method instead."
                },
                "extra": {
                    "discoveryTime": "<DISCOVERY-TIME-DATA>"
                },
                "locations": [
                    {
                        "sourceMap": "618:1:0"
                    }
                ],
                "severity": "Medium",
                "swcID": "SWC-111",
                "swcTitle": "Use of Deprecated Solidity Functions"
            },
            {
                "description": {
                    "head": "A call to a user-supplied address is executed.",
                    "tail": "The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state."
                },
                "extra": {
                    "discoveryTime": "<DISCOVERY-TIME-DATA>"
                },
                "locations": [
                    {
                        "sourceMap": "1038:1:0"
                    }
                ],
                "severity": "Medium",
                "swcID": "SWC-107",
                "swcTitle": "Reentrancy"
            },
            {
                "description": {
                    "head": "The return value of a message call is not checked.",
                    "tail": "External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states."
                },
                "extra": {
                    "discoveryTime": "<DISCOVERY-TIME-DATA>"
                },
                "locations": [
                    {
                        "sourceMap": "618:1:0"
                    }
                ],
                "severity": "Low",
                "swcID": "SWC-104",
                "swcTitle": "Unchecked Call Return Value"
            },
            {
                "description": {
                    "head": "The return value of a message call is not checked.",
                    "tail": "External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states."
                },
                "extra": {
                    "discoveryTime": "<DISCOVERY-TIME-DATA>"
                },
                "locations": [
                    {
                        "sourceMap": "849:1:0"
                    }
                ],
                "severity": "Low",
                "swcID": "SWC-104",
                "swcTitle": "Unchecked Call Return Value"
            },
            {
                "description": {
                    "head": "The return value of a message call is not checked.",
                    "tail": "External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states."
                },
                "extra": {
                    "discoveryTime": "<DISCOVERY-TIME-DATA>"
                },
                "locations": [
                    {
                        "sourceMap": "1038:1:0"
                    }
                ],
                "severity": "Low",
                "swcID": "SWC-104",
                "swcTitle": "Unchecked Call Return Value"
            }
        ],
        "meta": {},
        "sourceFormat": "evm-byzantium-bytecode",
        "sourceList": [
            "0x6daec61d05d8f1210661e7e7d1ed6d72bd6ade639398fac1e867aff50abfc1c1"
        ],
        "sourceType": "raw-bytecode"
    }
]